const calculateLeetCodePoints = async (groups: any[]) => {
    const { getLeetCodeProfile } = usePlateformAPI()

    // Helper function to fetch a user's LeetCode profile
    const fetchLeetCodeProfile = async (username: string) => {
        try {
            const response = await getLeetCodeProfile(username);
            if (!response.ok) throw new Error(`Failed to fetch LeetCode profile for ${username}`);
            const profile = await response.json();

            // Extract submission counts
            const easy = profile.totalSubmissions[1]?.count || 0;
            const medium = profile.totalSubmissions[2]?.count || 0;
            const hard = profile.totalSubmissions[3]?.count || 0;

            // Calculate points
            return easy * 5 + medium * 10 + hard * 2;
        } catch (error) {
            console.error(`Error fetching LeetCode profile for ${username}:`, error);
            return 0; // Default to 0 points if fetching fails
        }
    };

    // Process each group and calculate LeetCode points
    for (const group of groups) {
        let groupPoints = 0;

        // Check if userDetails exist
        if (Array.isArray(group.userDetails)) {
            // Iterate over users in the group
            for (const user of group.userDetails) {
                // Find the LeetCode profile
                const leetCodeProfile = user.competitivePlatforms.find(
                    (platform: any) => platform.platformName === "LeetCode"
                );

                if (leetCodeProfile?.username) {
                    // Fetch and calculate the points for this user
                    const userPoints = await fetchLeetCodeProfile(leetCodeProfile.username);
                    groupPoints += userPoints;
                }
            }
        }

        // Add the total points to the group object
        group.totalLeetCodePoints = groupPoints;
    }

    return groups;
};

// Example usage
(async () => {
    const groupsData = [
        {
            groupId: "674c86937abe4d23cd1531c8",
            userDetails: [
                {
                    avatar: "https://avatars.githubusercontent.com/u/108604262?v=4",
                    username: "HRDs-VERSE",
                    competitivePlatforms: [
                        { platformName: "LeetCode", username: "lol0", _id: "674b244225a291100daf93a2" },
                        { platformName: "HackerRank", username: "", _id: "674b244225a291100daf93a3" },
                        { platformName: "CodeForces", username: "", _id: "674b244225a291100daf93a4" }
                    ]
                }
            ]
        },
        {
            groupId: "674c86937abe4d23cd1531c9",
            userDetails: [
                {
                    avatar: "https://avatars.githubusercontent.com/u/108604263?v=4",
                    username: "CodeMaster",
                    competitivePlatforms: [
                        { platformName: "LeetCode", username: "codeMaster123", _id: "674b244225a291100daf93a5" },
                        { platformName: "HackerRank", username: "", _id: "674b244225a291100daf93a6" },
                        { platformName: "CodeForces", username: "", _id: "674b244225a291100daf93a7" }
                    ]
                }
            ]
        }
    ];

    const result = await calculateLeetCodePoints(groupsData);
    console.log(result);
})();
